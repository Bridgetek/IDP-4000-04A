/*
This file is automatically generated
DO NOT MODIFY BY HAND
Usr_Fan_Page
Header
*/

#ifndef Usr_Fan_Page__H
#define Usr_Fan_Page__H

#include "Esd_Base.h"
#include "Esd_BitmapInfo.h"
#include "Esd_Core.h"
#include "Esd_FontInfo.h"
#include "Ft_Esd.h"
#include "Ft_Esd_BitmapInfo.h"
#include "Ft_Esd_Circle.h"
#include "Ft_Esd_Label.h"
#include "Ft_Esd_LabelButton.h"
#include "Ft_Esd_Layout_Fixed.h"
#include "Ft_Esd_Rectangle.h"
#include "Ft_Esd_Theme.h"
#include "Ft_Esd_Widget.h"
#include "Usr_CircleImageButton.h"
#include "Usr_CircullarSlider.h"
#include "Usr_Spin_Image.h"
#include "back_white_icon.h"
#include "fan4.h"
#include "fan_white_icon.h"

#ifndef ESD_LOGIC
#define ESD_LOGIC(name, ...)
#define ESD_ACTOR(name, ...)
#define ESD_WIDGET(name, ...)
#define ESD_PAGE(name, ...)
#define ESD_APPLICATION(name, ...)
#define ESD_INPUT(name, ...)
#define ESD_ARRAY_INPUT(name, ...)
#define ESD_OUTPUT(name, ...)
#define ESD_SLOT(name, ...)
#define ESD_SIGNAL(name, ...)
#define ESD_VARIABLE(name, ...)
#define ESD_WRITER(name, ...)
#endif

#define Usr_Fan_Page_CLASSID 0x4626437E
ESD_SYMBOL(Usr_Fan_Page_CLASSID, Type = esd_classid_t)

ESD_WIDGET(Usr_Fan_Page, Include = "Usr_Fan_Page.h", Callback, X = 0, Y = 0, Width = 400, Height = 300, Page)
typedef struct
{
	union
	{
		void *Owner;
		Ft_Esd_Widget Widget;
	};
	ESD_SIGNAL(BackPushed)
	void(* BackPushed)(void *context);
	int Local_Method__Value;
	ESD_VARIABLE(NewValue, Type = int, Private)
	int NewValue;
	ESD_VARIABLE(PrevSpeed, Type = int, Default = 2, Private)
	int PrevSpeed;
	int Local_Method_2__Value;
	Ft_Esd_Layout_Fixed Fixed_Position;
	Ft_Esd_LabelButton ESD_Label_Button_1;
	Ft_Esd_LabelButton ESD_Label_Button;
	Usr_CircleImageButton Usr_CircleImageButton_3_1_1;
	Usr_CircleImageButton Usr_CircleImageButton_3_1;
	Usr_CircullarSlider Usr_CircullarSlider;
	Usr_Spin_Image Usr_Spin_Image;
	Ft_Esd_Label Mode_Selected_Label;
	Ft_Esd_Label Fan_Label;
	Ft_Esd_Circle FanBG_Circle_;
	Ft_Esd_Rectangle ESD_Rectangle_Widget;
} Usr_Fan_Page;

void Usr_Fan_Page__Initializer(Usr_Fan_Page *context);

ESD_SLOT(Update)
void Usr_Fan_Page_Update(Usr_Fan_Page *context);

ESD_SLOT(End)
void Usr_Fan_Page_End(Usr_Fan_Page *context);

ESD_OUTPUT(FanOnOff, Type = int)
int Usr_Fan_Page_FanOnOff(Usr_Fan_Page *context);

ESD_SLOT(Right)
void Usr_Fan_Page_Right(Usr_Fan_Page *context);

ESD_SLOT(Left)
void Usr_Fan_Page_Left(Usr_Fan_Page *context);

#endif /* Usr_Fan_Page__H */

/* end of file */

/*
This file is automatically generated
DO NOT MODIFY BY HAND
newImageScale
Header
*/

#ifndef newImageScale__H
#define newImageScale__H

#include "Esd_Base.h"
#include "Ft_Esd.h"
#include "Ft_Esd_BitmapInfo.h"
#include "Ft_Esd_Math.h"
#include "Ft_Esd_Widget.h"

#ifndef ESD_LOGIC
#define ESD_LOGIC(name, ...)
#define ESD_ACTOR(name, ...)
#define ESD_WIDGET(name, ...)
#define ESD_PAGE(name, ...)
#define ESD_APPLICATION(name, ...)
#define ESD_INPUT(name, ...)
#define ESD_ARRAY_INPUT(name, ...)
#define ESD_OUTPUT(name, ...)
#define ESD_SLOT(name, ...)
#define ESD_SIGNAL(name, ...)
#define ESD_VARIABLE(name, ...)
#define ESD_WRITER(name, ...)
#endif

#define newImageScale_CLASSID 0xDE9ADE56
ESD_SYMBOL(newImageScale_CLASSID, Type = esd_classid_t)

ESD_WIDGET(newImageScale, Include = "newImageScale.h", Callback, X = 0, Y = 0, Width = 400, Height = 300)
typedef struct
{
	union
	{
		void *Owner;
		Ft_Esd_Widget Widget;
	};
	ESD_INPUT(BitmapCell, Type = Ft_Esd_BitmapCell)
	Ft_Esd_BitmapCell(* BitmapCell)(void *context);
	ESD_INPUT(XScale, Type = ft_int32_f16_t)
	ft_int32_f16_t(* XScale)(void *context);
} newImageScale;

void newImageScale__Initializer(newImageScale *context);

ESD_SLOT(Render)
void newImageScale_Render(newImageScale *context);

#endif /* newImageScale__H */

/* end of file */

/*
This file is automatically generated
DO NOT MODIFY BY HAND
Usr_HomePage
Header
*/

#ifndef Usr_HomePage__H
#define Usr_HomePage__H

#include "Esd_Base.h"
#include "Esd_BitmapInfo.h"
#include "Esd_Core.h"
#include "Esd_FontInfo.h"
#include "Ft_Esd.h"
#include "Ft_Esd_BitmapInfo.h"
#include "Ft_Esd_Circle.h"
#include "Ft_Esd_Image.h"
#include "Ft_Esd_ImageButton.h"
#include "Ft_Esd_Label.h"
#include "Ft_Esd_Layout_Fixed.h"
#include "Ft_Esd_NumericLabel.h"
#include "Ft_Esd_Rectangle.h"
#include "Ft_Esd_Theme.h"
#include "Ft_Esd_Toggle.h"
#include "Ft_Esd_TouchPanel.h"
#include "Ft_Esd_Widget.h"
#include "LightCase.h"
#include "LightOn.h"
#include "Usr_AirConWidget.h"
#include "Usr_GrayTextTheme.h"
#include "Usr_Toogle_Theme.h"
#include "curtain3.h"
#include "curtain_open_home5.h"
#include "floor_heating2.h"

#ifndef ESD_LOGIC
#define ESD_LOGIC(name, ...)
#define ESD_ACTOR(name, ...)
#define ESD_WIDGET(name, ...)
#define ESD_PAGE(name, ...)
#define ESD_APPLICATION(name, ...)
#define ESD_INPUT(name, ...)
#define ESD_ARRAY_INPUT(name, ...)
#define ESD_OUTPUT(name, ...)
#define ESD_SLOT(name, ...)
#define ESD_SIGNAL(name, ...)
#define ESD_VARIABLE(name, ...)
#define ESD_WRITER(name, ...)
#endif

#define Usr_HomePage_CLASSID 0xDD460F29
ESD_SYMBOL(Usr_HomePage_CLASSID, Type = esd_classid_t)

ESD_WIDGET(Usr_HomePage, Include = "Usr_HomePage.h", Callback, X = 0, Y = 0, Width = 400, Height = 300, Page)
typedef struct
{
	union
	{
		void *Owner;
		Ft_Esd_Widget Widget;
	};
	ESD_VARIABLE(Hour, Type = int, Public)
	int Hour;
	ESD_VARIABLE(Minute, Type = int, Public)
	int Minute;
	ESD_VARIABLE(Second, Type = int, Public)
	int Second;
	ESD_SIGNAL(ButtonPushed)
	void(* ButtonPushed)(void *context);
	ESD_VARIABLE(SubPage, Type = int, Private)
	int SubPage;
	Ft_Esd_Layout_Fixed Fixed_Position;
	Ft_Esd_Label ESD_Label_2;
	Ft_Esd_Label ESD_Label_1;
	Ft_Esd_Label ESD_Label;
	Ft_Esd_NumericLabel Second_Numeric_Label;
	Ft_Esd_NumericLabel Hour_Numeric_Label;
	Ft_Esd_NumericLabel Minutes_Numeric_Label;
	Ft_Esd_Circle ESD_Circle__2;
	Ft_Esd_Toggle ESD_Toggle_3;
	Ft_Esd_Toggle ESD_Toggle_2;
	Ft_Esd_Toggle ESD_Toggle_1;
	Ft_Esd_Toggle ESD_Toggle;
	Ft_Esd_TouchPanel ESD_Touch_Panel_1_1_1;
	Ft_Esd_TouchPanel ESD_Touch_Panel_1_1;
	Ft_Esd_TouchPanel ESD_Touch_Panel_1;
	Ft_Esd_TouchPanel ESD_Touch_Panel;
	Ft_Esd_ImageButton ESD_Image_Button;
	Usr_AirConWidget Usr_AirConWidget;
	Ft_Esd_Image ESD_Image_7;
	Ft_Esd_Rectangle ESD_Rectangle_Widget_4;
	Ft_Esd_Circle ESD_Circle_;
	Ft_Esd_Image ESD_Image_5;
	Ft_Esd_Image ESD_Image_8;
	Ft_Esd_Rectangle ESD_Rectangle_Widget_3;
	Ft_Esd_Image ESD_Image_2;
	Ft_Esd_Label Label_Light_1_1_1;
	Ft_Esd_Label Label_Light_1_1;
	Ft_Esd_Label Label_Light_1;
	Ft_Esd_Label Label_Light;
	Ft_Esd_Rectangle Rectangle_Heating;
	Ft_Esd_Rectangle Rectangle_Curtain;
	Ft_Esd_Rectangle Rectangle_Light;
	Ft_Esd_Rectangle Rectangle_Air_Con;
	Ft_Esd_Image ESD_Image;
} Usr_HomePage;

void Usr_HomePage__Initializer(Usr_HomePage *context);

ESD_SLOT(Update)
void Usr_HomePage_Update(Usr_HomePage *context);

ESD_SLOT(End)
void Usr_HomePage_End(Usr_HomePage *context);

ESD_OUTPUT(CurrentPage, Type = int)
int Usr_HomePage_CurrentPage(Usr_HomePage *context);

ESD_SLOT(Start)
void Usr_HomePage_Start(Usr_HomePage *context);

#endif /* Usr_HomePage__H */

/* end of file */

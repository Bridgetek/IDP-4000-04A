/*
This file is automatically generated
DO NOT MODIFY BY HAND
Usr_Time_Actor
Header
*/

#ifndef Usr_Time_Actor__H
#define Usr_Time_Actor__H

#include "Esd_Base.h"
#include "Ft_Esd.h"
#include "Ft_Esd_Timer.h"

#ifndef ESD_LOGIC
#define ESD_LOGIC(name, ...)
#define ESD_ACTOR(name, ...)
#define ESD_WIDGET(name, ...)
#define ESD_PAGE(name, ...)
#define ESD_APPLICATION(name, ...)
#define ESD_INPUT(name, ...)
#define ESD_ARRAY_INPUT(name, ...)
#define ESD_OUTPUT(name, ...)
#define ESD_SLOT(name, ...)
#define ESD_SIGNAL(name, ...)
#define ESD_VARIABLE(name, ...)
#define ESD_WRITER(name, ...)
#endif

ESD_ACTOR(Usr_Time_Actor, Include = "Usr_Time_Actor.h", Callback)
typedef struct
{
	void *Owner;
	ESD_VARIABLE(totalSeconds, Type = int, Default = 29730, Private)
	int totalSeconds;
	Ft_Esd_Timer ESD_Timer;
} Usr_Time_Actor;

void Usr_Time_Actor__Initializer(Usr_Time_Actor *context);

ESD_SLOT(Update)
void Usr_Time_Actor_Update(Usr_Time_Actor *context);

ESD_SLOT(End)
void Usr_Time_Actor_End(Usr_Time_Actor *context);

ESD_SLOT(Start)
void Usr_Time_Actor_Start(Usr_Time_Actor *context);

ESD_OUTPUT(Hour, Type = int)
int Usr_Time_Actor_Hour(Usr_Time_Actor *context);

ESD_OUTPUT(Minute, Type = int)
int Usr_Time_Actor_Minute(Usr_Time_Actor *context);

ESD_OUTPUT(Second, Type = int)
int Usr_Time_Actor_Second(Usr_Time_Actor *context);

#endif /* Usr_Time_Actor__H */

/* end of file */
